{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","colors","useState","edit","value","input","setInput","inputFocus","useRef","useEffect","current","focus","count","setCount","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","bgColor","length","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","style","background","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","push","splice","indexOf","filter","removeArr","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA4EeA,MAxEf,SAAkBC,GACjB,IAAMC,EAAS,CACd,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,YAEb,EAA0BC,mBAASF,EAAMG,KAAOH,EAAMG,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAaC,iBAAO,MAC1BC,qBAAU,WACTF,EAAWG,QAAQC,WAGpB,MAA0BT,mBAAS,GAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAACC,GACrBT,EAASS,EAAEC,OAAOZ,QAmBnB,OACC,sBAAMa,UAAU,YAAYC,SAjBR,SAACH,GACrBA,EAAEI,iBAEFnB,EAAMkB,SAAS,CACdE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMnB,EACNoB,QAAQ,8CAAD,OAEJxB,EAAOW,EAAQX,EAAOyB,QAAQ,GAF1B,0BAGJzB,EAAOW,EAAQX,EAAOyB,QAAQ,GAH1B,sBAORb,EAASD,EAAQ,GACjBN,EAAS,KAGT,SACEN,EAAMG,KACN,sBAAKc,UAAU,uBAAf,UACC,uBACCU,KAAK,OACLC,YAAY,kBACZxB,MAAOC,EACPwB,KAAK,OACLZ,UAAU,kBACVa,SAAUhB,EACViB,IAAKxB,IAEN,wBAAQU,UAAU,mBAAlB,SACC,cAAC,IAAD,CAAQA,UAAU,eAIpB,sBAAKA,UAAU,uBAAf,UACC,uBACCU,KAAK,OACLC,YAAY,aACZxB,MAAOC,EACPwB,KAAK,OACLZ,UAAU,aACVa,SAAUhB,EACViB,IAAKxB,IAEN,wBAAQU,UAAU,cAAlB,SACC,cAAC,IAAD,CAAkBA,UAAU,kBCvBnBe,MAzCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAChD,EAAwBlC,mBAAS,CAAEkB,GAAI,KAAMhB,MAAO,KAApD,mBAAOD,EAAP,KAAakC,EAAb,KAUA,OAAIlC,EAAKiB,GACD,cAAC,EAAD,CAAUjB,KAAMA,EAAMe,SATT,SAACd,GACrBgC,EAAWjC,EAAKiB,GAAIhB,GACpBiC,EAAQ,CACPjB,GAAI,KACJhB,MAAO,QAOF6B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OAChB,sBACCvB,UAAWsB,EAAKE,WAAa,oBAAsB,WAEnDC,MAAO,CAAEC,WAAYJ,EAAKd,SAH3B,UAKC,qBACCR,UAAU,gBAEV2B,QAAS,kBAAMV,EAAaK,EAAKnB,KAHlC,SAKEmB,EAAKf,MAHDe,EAAKnB,IAKX,sBAAKH,UAAU,QAAf,UACC,cAAC,IAAD,CACCA,UAAU,cACV2B,QAAS,kBAAMT,EAAWI,EAAKnB,OAEhC,cAAC,IAAD,CACCH,UAAU,YACV2B,QAAS,kBAAMP,EAAQ,CAAEjB,GAAImB,EAAKnB,GAAIhB,MAAOmC,EAAKf,eAjB/CgB,OC8COK,MA/Df,WACC,MAA0B3C,mBAAS,IAAnC,mBAAO+B,EAAP,KAAca,EAAd,KAgDA,OACC,gCACC,4DACA,cAAC,EAAD,CAAU5B,SAjDI,SAACqB,GAChB,GAAKA,EAAKf,OAAQ,QAAQuB,KAAKR,EAAKf,MAApC,CAIA,IAAMwB,EAAQ,CAAIT,GAAJ,mBAAaN,IAC3BgB,QAAQC,IAAIF,GACZF,EAASE,OA2CR,cAAC,EAAD,CACCf,MAAOA,EACPC,aA3BkB,SAACd,GACrB,IAAI+B,EAAelB,EAAMK,KAAI,SAACC,GAI7B,OAHIA,EAAKnB,KAAOA,IACfmB,EAAKE,YAAcF,EAAKE,YAElBF,KAERY,EAAaC,KACZD,EAAaE,OACZF,EAAaG,QACZH,EAAaI,QAAO,SAAChB,GACpB,OAAOA,EAAKE,cACV,IAEJ,GACC,IAGHK,EAASK,IAUPhB,WAjCgB,SAACf,GACnB,IAAMoC,EAAY,YAAIvB,GAAOsB,QAAO,SAAChB,GAAD,OAAUA,EAAKnB,KAAOA,KAC1D0B,EAASU,IAgCPpB,WA5CgB,SAACqB,EAAQC,GACtBA,EAASlC,OAAQ,QAAQuB,KAAKW,EAASlC,OAI5CsB,GAAS,SAACa,GAAD,OACRA,EAAKrB,KAAI,SAACsB,GAAD,OAAWA,EAAKxC,KAAOqC,EAASC,EAAWE,eCZxCC,MARf,WACC,OACC,qBAAK5C,UAAU,WAAf,SACC,cAAC,EAAD,OCFH6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ce595a66.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport { FaSave } from \"react-icons/fa\";\n\nfunction TodoForm(props) {\n\tconst colors = [\n\t\t[\"#ff7614\", \"#ff5411\"],\n\t\t[\"#5d0cff\", \"#9b00fa\"],\n\t\t[\"#ff0cf1\", \"#fa0087\"],\n\t\t[\"#149fff\", \"#117aff\"],\n\t];\n\tconst [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\tconst inputFocus = useRef(null);\n\tuseEffect(() => {\n\t\tinputFocus.current.focus();\n\t});\n\n\tconst [count, setCount] = useState(0);\n\n\tconst handleChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tprops.onSubmit({\n\t\t\tid: Math.floor(Math.random() * 10000),\n\t\t\ttext: input,\n\t\t\tbgColor: `linear-gradient(\n\t\t\t\t90deg, \n\t\t\t\t${colors[count % colors.length][0]} 0%, \n\t\t\t\t${colors[count % colors.length][1]} 100%\n\t\t\t\t)`,\n\t\t});\n\n\t\tsetCount(count + 1);\n\t\tsetInput(\"\");\n\t};\n\treturn (\n\t\t<form className=\"todo-form\" onSubmit={handleSubmit}>\n\t\t\t{props.edit ? (\n\t\t\t\t<div className=\"todo-input-container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Update the todo\"\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tclassName=\"todo-input edit\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tref={inputFocus}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"todo-button edit\">\n\t\t\t\t\t\t<FaSave className=\"icons\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"todo-input-container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Add a todo\"\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tclassName=\"todo-input\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tref={inputFocus}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"todo-button\">\n\t\t\t\t\t\t<AiFillPlusCircle className=\"icons\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</form>\n\t);\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\nimport TodoForm from \"./TodoForm\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n\tconst [edit, setEdit] = useState({ id: null, value: \"\" });\n\n\tconst submitUpdate = (value) => {\n\t\tupdateTodo(edit.id, value);\n\t\tsetEdit({\n\t\t\tid: null,\n\t\t\tvalue: \"\",\n\t\t});\n\t};\n\n\tif (edit.id) {\n\t\treturn <TodoForm edit={edit} onSubmit={submitUpdate} />;\n\t}\n\treturn todos.map((todo, index) => (\n\t\t<div\n\t\t\tclassName={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n\t\t\tkey={index}\n\t\t\tstyle={{ background: todo.bgColor }}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"todo-row-text\"\n\t\t\t\tkey={todo.id}\n\t\t\t\tonClick={() => completeTodo(todo.id)}\n\t\t\t>\n\t\t\t\t{todo.text}\n\t\t\t</div>\n\t\t\t<div className=\"icons\">\n\t\t\t\t<MdDelete\n\t\t\t\t\tclassName=\"delete-icon\"\n\t\t\t\t\tonClick={() => removeTodo(todo.id)}\n\t\t\t\t/>\n\t\t\t\t<MdEdit\n\t\t\t\t\tclassName=\"edit-icon\"\n\t\t\t\t\tonClick={() => setEdit({ id: todo.id, value: todo.text })}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t));\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoList() {\n\tconst [todos, setTodos] = useState([]);\n\n\tconst addTodo = (todo) => {\n\t\tif (!todo.text || /^\\s*$/.test(todo.text)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newTodos = [todo, ...todos];\n\t\tconsole.log(newTodos);\n\t\tsetTodos(newTodos);\n\t};\n\n\tconst updateTodo = (todoId, newValue) => {\n\t\tif (!newValue.text || /^\\s*$/.test(newValue.text)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTodos((prev) =>\n\t\t\tprev.map((item) => (item.id === todoId ? newValue : item))\n\t\t);\n\t};\n\n\tconst removeTodo = (id) => {\n\t\tconst removeArr = [...todos].filter((todo) => todo.id !== id);\n\t\tsetTodos(removeArr);\n\t};\n\n\tconst completeTodo = (id) => {\n\t\tlet updatedTodos = todos.map((todo) => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.isComplete = !todo.isComplete;\n\t\t\t}\n\t\t\treturn todo;\n\t\t});\n\t\tupdatedTodos.push(\n\t\t\tupdatedTodos.splice(\n\t\t\t\tupdatedTodos.indexOf(\n\t\t\t\t\tupdatedTodos.filter((todo) => {\n\t\t\t\t\t\treturn todo.isComplete;\n\t\t\t\t\t})[0]\n\t\t\t\t),\n\t\t\t\t1\n\t\t\t)[0]\n\t\t);\n\t\t// console.log(updatedTodos);\n\t\tsetTodos(updatedTodos);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>What's the plan for today?</h1>\n\t\t\t<TodoForm onSubmit={addTodo} />\n\t\t\t<Todo\n\t\t\t\ttodos={todos}\n\t\t\t\tcompleteTodo={completeTodo}\n\t\t\t\tremoveTodo={removeTodo}\n\t\t\t\tupdateTodo={updateTodo}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default TodoList;\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"todo-app\">\n\t\t\t<TodoList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
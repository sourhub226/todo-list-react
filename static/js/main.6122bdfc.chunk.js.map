{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputFocus","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6122bdfc.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport {FaSave } from \"react-icons/fa\";\n\nfunction TodoForm(props) {\n\tconst [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n\tconst inputFocus = useRef(null);\n\tuseEffect(() => {\n\t\tinputFocus.current.focus();\n\t});\n\n\tconst handleChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tprops.onSubmit({\n\t\t\tid: Math.floor(Math.random() * 10000),\n\t\t\ttext: input,\n\t\t});\n\n\t\tsetInput(\"\");\n\t};\n\treturn (\n\t\t<form className=\"todo-form\" onSubmit={handleSubmit}>\n\t\t\t{props.edit ? (\n\t\t\t\t<div className=\"todo-input-container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Update the todo\"\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tclassName=\"todo-input edit\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tref={inputFocus}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"todo-button edit\">\n\t\t\t\t\t\t<FaSave className=\"icons\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"todo-input-container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Add a todo\"\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tclassName=\"todo-input\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tref={inputFocus}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"todo-button\">\n\t\t\t\t\t\t<AiFillPlusCircle className=\"icons\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</form>\n\t);\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport { MdDelete ,MdEdit} from \"react-icons/md\";\nimport TodoForm from \"./TodoForm\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n\tconst [edit, setEdit] = useState({ id: null, value: \"\" });\n\n\tconst submitUpdate = (value) => {\n\t\tupdateTodo(edit.id, value);\n\t\tsetEdit({\n\t\t\tid: null,\n\t\t\tvalue: \"\",\n\t\t});\n\t};\n\n\tif (edit.id) {\n\t\treturn <TodoForm edit={edit} onSubmit={submitUpdate} />;\n\t}\n\treturn todos.map((todo, index) => (\n\t\t<div\n\t\t\tclassName={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n\t\t\tkey={index}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"todo-row-text\"\n\t\t\t\tkey={todo.id}\n\t\t\t\tonClick={() => completeTodo(todo.id)}\n\t\t\t>\n\t\t\t\t{todo.text}\n\t\t\t</div>\n\t\t\t<div className=\"icons\">\n\t\t\t\t<MdDelete\n\t\t\t\t\tclassName=\"delete-icon\"\n\t\t\t\t\tonClick={() => removeTodo(todo.id)}\n\t\t\t\t/>\n\t\t\t\t<MdEdit\n\t\t\t\t\tclassName=\"edit-icon\"\n\t\t\t\t\tonClick={() => setEdit({ id: todo.id, value: todo.text })}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t));\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoList() {\n\tconst [todos, setTodos] = useState([]);\n\n\tconst addTodo = (todo) => {\n\t\tif (!todo.text || /^\\s*$/.test(todo.text)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newTodos = [todo, ...todos];\n\n\t\tsetTodos(newTodos);\n\t};\n\n\tconst updateTodo = (todoId, newValue) => {\n\t\tif (!newValue.text || /^\\s*$/.test(newValue.text)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTodos((prev) =>\n\t\t\tprev.map((item) => (item.id === todoId ? newValue : item))\n\t\t);\n\t};\n\n\tconst removeTodo = (id) => {\n\t\tconst removeArr = [...todos].filter((todo) => todo.id !== id);\n\t\tsetTodos(removeArr);\n\t};\n\n\tconst completeTodo = (id) => {\n\t\tlet updatedTodos = todos.map((todo) => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.isComplete = !todo.isComplete;\n\t\t\t}\n\t\t\treturn todo;\n\t\t});\n\t\tsetTodos(updatedTodos);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>What's the plan for today?</h1>\n\t\t\t<TodoForm onSubmit={addTodo} />\n\t\t\t<Todo\n\t\t\t\ttodos={todos}\n\t\t\t\tcompleteTodo={completeTodo}\n\t\t\t\tremoveTodo={removeTodo}\n\t\t\t\tupdateTodo={updateTodo}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default TodoList;\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"todo-app\">\n\t\t\t<TodoList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}